q()
q()
data <- data.frame(
 X1 = c(12, 10, 6, 12, 11, 5, 6, 5),
X2 = c(10, 10, 5, 10, 11, 7, 6, 4),
 X3 = c(7, 7, 11, 5, 6, 10, 11, 12),
X4 = c(6, 7, 10, 7, 5, 12, 10, 11),
Group = c(2, 2, 0, 2, 2, 0, 0, 0)
)
> library(cluster)
 library(cluster)
dist_mt = dist(data[, 2:5]) 
clusters <- agnes(dist(data[,-5]), method = "single")
clusters
plot(clusters)
cluster_labels <- cutree(clusters, k = 2)
cluster_labels <- cutree(clusters, k = 2)
cluster_labels
data$Cluster <- cluster_labels
data
centers <- aggregate(data[, 1:4], by = list(cluster_labels), FUN = mean)
centers 
centers <- aggregate(data[, 1:5], by = list(cluster_labels), FUN = mean)
centers 
centers <- aggregate(data[, 1:4], by = list(cluster_labels), FUN = mean)
centers 
clusters
clusters <- agnes(dist(data[, 1:4]), method = "single")
clusters
silhouette_avg <- silhouette(clusters, dist(data[, 1:4]))
data
cluster_quality <- silhouette(cluster_labels, dist(data[, 1:4]))
cluster_quality
print(mean(cluster_quality[, "sil_width"]))
cluster_quality <- silhouette(cluster_labels, dist(data[, 1:4]))
mean(cluster_quality[, "sil_width"])
library(MASS)
discriminant_model <- lda(Group ~ X1 + X2 + X3 + X4, data = data)
discriminant_model
new_data <- data.frame(
  N = c(9, 10),
  X1 = c(7, 12),
  X2 = c(6, 10),
  X3 = c(10, 8),
  X4 = c(11, 6)
)
new_data
predictions <- predict(lda_model, newdata = new_data)
new_data <- data.frame(
  X1 = c(7, 12),
  X2 = c(6, 10),
  X3 = c(10, 8),
  X4 = c(11, 6)
)
new_data
predicted_groups <- predict(discriminant_model, newdata = new_data)$class
predicted_groups
library(tm)
library(tm)
library(tm)
install.packages("tm")
library(tm)
t1 <- "I need a new computer"
t2 <- "I use programme R for data analysis, I installed it on my computer"
t3 <- "I like using programme R"
t4 <- "My new computer is cool, but I still like my 2 old ones"
t5 <- "5 times I tried to learn programme R"
corpus <- Corpus(VectorSource(c(t1, t2, t3, t4, t5)))
corpus
install.packages("tm")
text <- c(t1, t2, t3, t4, t5)
corpus <- Corpus(VectorSource(text))
corpus1 <- Corpus(VectorSource(text))
corpus1
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, stripWhitespace)
t1
text
corpus
inspect(corpus)
term_freq <- DocumentTermMatrix(corpus)
freq_computer <- sum(term_freq$dimnames$Terms == "computer")
freq_programme <- sum(term_freq$dimnames$Terms == "programme")
sum_freq <- freq_computer + freq_programme
freq_computer
freq_programme
sum_freq
tdm <- TermDocumentMatrix(corpus)
term_freq <- tdm <- TermDocumentMatrix(corpus)
term_freq
computer_freq <- tdm$dimnames$Terms %in% c("computer")
programme_freq <- tdm$dimnames$Terms %in% c("programme")
computer_sum <- sum(tdm[computer_freq, ])
programme_sum <- sum(tdm[programme_freq, ])
computer_sum
programme_sum
tdm <- TermDocumentMatrix(corpus)
computer_freq <- tdm$dimnames$Terms == "computer")
> computer_freq <- tdm$dimnames$Terms == "computer"
computer_freq <- tdm$dimnames$Terms == "computer"
computer_freq
computer_freq <- tdm$dimnames$Terms %in% c("computer")
computer_freq
computer_sum <- sum(tdm[computer_freq, ])
computer_sum
computer_freq <- tdm$dimnames$Terms == "computer"
computer_sum <- sum(tdm[computer_freq, ])
computer_sum
computer_freq <- sum(tdm[tdm$dimnames$Terms == "computer",])
computer_freq
tdm <- TermDocumentMatrix(corpus)
computer_freq <- sum(tdm[tdm$dimnames$Terms == "computer", ])
programme_freq <- sum(tdm[tdm$dimnames$Terms == "programme", ])
sum_freq <- freq_computer + freq_programme
computer_freq
programme_freq
sum_freq
sum_freq <- computer_freq + programme_freq
sum_freq
q()
 install.packages("maptools")
install.packages("sp")
 library('maptools')
 library('sp')
data(wrld_simpl)
par(mai=c(0,0,0,0))
par(mar=c(0,0,0,0))
plot(wrld_simpl, xlim=c(11,30),
ylim=c(37,70), bg='skyblue', col='brown',
border='black')
plot(wrld_simpl, xlim=c(11,30),
ylim=c(37,70), bg='skyblue', col='bisque',
border='black')
q()
data(wrld_simpl)
par(mai=c(0,0,0,0))
par(mar=c(0,0,0,0))
plot(wrld_simpl, xlim=c(11,30),
ylim=c(37,70), bg='skyblue', col='brown',
border='black')
plot(wrld_simpl, xlim=c(11,30),
ylim=c(37,70), bg='skyblue', col='bisque',
border='black')
plot(wrld_simpl[150,],col=c('green'),add=T)
plot(wrld_simpl[151,],col=c('green'),add=T)
plot(wrld_simpl[208,],col=c('green'),add=T)
country_info <- wrld_simpl[wrld_simpl@data$ISO3 == "UKR", ]
country_info
wrld_simpl$NAME
data(wrld_simpl)
par(mai=c(0,0,0,0))
par(mar=c(0,0,0,0))
plot(wrld_simpl, xlim=c(11,30),
ylim=c(37,70), bg='skyblue', col='brown',
border='black')
plot(wrld_simpl, xlim=c(11,30),
ylim=c(37,70), bg='skyblue', col='bisque',
border='black')
plot(wrld_simpl[164,],col=c('green'),add=T)
data(wrld_simpl)
par(mai=c(0,0,0,0))
par(mar=c(0,0,0,0))
plot(wrld_simpl, xlim=c(11,30),
ylim=c(37,70), bg='skyblue', col='bisque',
border='black')
plot(wrld_simpl[164,],col=c('green'),add=T)
dir_r <- "C:/Users/mvozn/Desktop/R"
setwd(dir_r)
plot(wrld_simpl[208,],col=c('red'),add=T)
install.packages("raster")
library("raster")
dat<-read.csv("geoMap.csv",header=T,stringsAsFactors = F)
 nams<-read.csv("ukrna.csv",header=T)
datn<-merge(nams,dat,by="Region",all=T)
dat<-read.csv("geoMap.csv",header=T,stringsAsFactors = F)
 nams<-read.csv("ukrna.csv",header=T)
datn<-merge(nams,dat,by="Region",all=T)
load(file="ukrmap.Rdata")
load(file="ukrmap.Rdata")
numcol<-7
brkMP<-c(min(x)-0.001,
seq(min(x)+0.001,max(x)+0.001,length.out=numcol+1))
intMP<-numcol+2-findInterval(x,brkMP)
palette(c(heat.colors(numcol, alpha = 1),rgb(1,0,1)))
par(xpd=TRUE)
par(mar=c(0,0,0,0))
library('sp')
library(raster)
load(file="ukrmap.Rdata")
numcol<-7
brkMP<-c(min(x)-0.001,
seq(min(x)+0.001,max(x)+0.001,length.out=numcol+1))
intMP<-numcol+2-findInterval(x,brkMP)
palette(c(heat.colors(numcol, alpha = 1),rgb(1,0,1)))
par(xpd=TRUE)
par(mar=c(0,0,0,0))
load(file="ukrmap.Rdata")
numcol<-7
brkMP<-c(min(0)-0.001,
seq(min(0)+0.001,max(1)+0.001,length.out=numcol+1))
intMP<-numcol+2-findInterval(1,brkMP)
palette(c(heat.colors(numcol, alpha = 1),rgb(1,0,1)))
par(xpd=TRUE)
par(mar=c(0,0,0,0))
x<-datn$Cpp/(datn$Cpp+datn$Sql) 
x<-datn$Cpp/(datn$Cpp+datn$Sql)
datn <- datn[complete.cases(datn$Cpp, datn$Sql), ]
x<-datn$Cpp/(datn$Cpp+datn$Sql)
datn$Cpp <- as.numeric(datn$Cpp)
datn$Sql <- as.numeric(datn$Sql)
datn <- datn[!is.na(datn$Cpp), ]
datn$Cpp <- as.numeric(datn$Cpp)
datn$Sql <- as.numeric(datn$Sql)
x<-datn$Cpp/(datn$Cpp+datn$Sql)
load(file="ukrmap.Rdata")
numcol<-7
brkMP<-c(min(x)-0.001,
seq(min(x)+0.001,max(x)+0.001,length.out=numcol+1))
intMP<-numcol+2-findInterval(x,brkMP)
palette(c(heat.colors(numcol, alpha = 1),rgb(1,0,1)))
par(xpd=TRUE)
par(mar=c(0,0,0,0))
x
datn
dat<-read.csv("geoMap.csv",header=T,stringsAsFactors = F)
nams<-read.csv("ukrna.csv",header=T)
datn<-merge(nams,dat,by="Region",all=T)
x<-datn$Cpp/(datn$Cpp+datn$Sql) 
datn
dat<-read.csv("geoMap.csv",header=T,stringsAsFactors = F)
nams<-read.csv("ukrna.csv",header=T)
datn<-merge(nams,dat,by="Region",all=T)
x<-datn$Cpp/(datn$Cpp+datn$Sql) 
load(file="ukrmap.Rdata")
numcol<-7
brkMP<-c(min(x)-0.001,
seq(min(x)+0.001,max(x)+0.001,length.out=numcol+1))
intMP<-numcol+2-findInterval(x,brkMP)
palette(c(heat.colors(numcol, alpha = 1),rgb(1,0,1)))
par(xpd=TRUE)
par(mar=c(0,0,0,0))
plot(ukraine,col=intMP[order(datn$n)])
> legend("bottomright",title="C++ %",
+ legend=c("<45","<38","<31",
+ "<24","<18","<12","<6","0"),
+ fill=c(heat.colors(numcol, alpha = 1),rgb(1,1,1)),inset=0,horiz = F)
legend("bottomright",title="C++ %", legend=c("<45","<38","<31", "<24","<18","<12","<6","0"), fill=c(heat.colors(numcol, alpha = 1),rgb(1,1,1)),inset=0,horiz = F)
q()
