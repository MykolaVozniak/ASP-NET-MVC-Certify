@using System.Security.Policy;
@using Certify.Data;
@using Certify.Models;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<User> _userManager
@model Certify.ViewModels.DocumentCreate
@{
    ViewData["Title"] = "Add Document";
}

<div class="container col-md-6">

    <div class="text-center text-uppercase">
        <h1 class="display-4">@ViewData["Title"]</h1>
    </div>

    <hr/>

    <form asp-action="AddFile" asp-controller="MyDocuments" method="post" enctype="multipart/form-data" class="container-fluid row g-3">
        <div class="col-12">
            <label class="form-label">Upload File</label>
            <input type="file" name="uploadedFile" class="form-control" />
            <span class="text-danger"></span>
        </div>

        <div class="col-12">
            <label asp-for="Title" class="form-label">Title</label>
            <input asp-for="Title" class="form-control" placeholder="Document title...">
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class ="col-12">
            <label asp-for="ShortDescription" class="form-label">Short Description</label>
            <input asp-for="ShortDescription" class="form-control" placeholder="This document is very important because...">
            <span asp-validation-for="ShortDescription" class="text-danger"></span>
        </div>
         
        <div>
             <label  class="form-label">To whom to send</label>
             <div id="chips-container">
                    <div class="chips h-100 "> 
                            <input id="email-input" type="text" placeholder="Enter email..." />
                    </div>
             </div>
        </div>

        <div class="col-6  ">
                <a asp-action="Index" class="btn btn-secondary w-100  mt-md-4">Back</a>
        </div>

        <div class="col-6">
                <button type="submit" class="btn btn-primary w-100  mt-md-4">Create</button>
        </div>

    </form>

</div>


<script>
    // Отримуємо елементи DOM
    var chipsContainer = document.getElementById('chips-container');
    var chipsElement = chipsContainer.querySelector('.chips');
    var emailInput = chipsContainer.querySelector('#email-input');

    // Створюємо порожній список для збереження вибраних електронних адрес
    var selectedEmails = [];

    // Функція для додавання нового чіпсу
    function addChip(email) {
        // Створюємо елемент чіпсу
        var chipElement = document.createElement('div');
        chipElement.classList.add('chip');
        chipElement.textContent = email;

        // Додаємо обробник події для видалення чіпсу при кліку
        chipElement.addEventListener('click', function() {
            removeChip(email);
        });

        // Додаємо чіпс до контейнера
        chipsElement.appendChild(chipElement);

        // Додаємо електронну адресу до списку вибраних
        selectedEmails.push(email);
    }

    // Функція для видалення чіпсу
    function removeChip(email) {
        // Знаходимо елемент чіпсу за електронною адресою
        var chipElements = chipsElement.getElementsByClassName('chip');
        for (var i = 0; i < chipElements.length; i++) {
            if (chipElements[i].textContent === email) {
                // Видаляємо елемент чіпсу з DOM
                chipElements[i].parentNode.removeChild(chipElements[i]);
                break;
            }
        }

        // Видаляємо електронну адресу зі списку вибраних
        var index = selectedEmails.indexOf(email);
        if (index > -1) {
            selectedEmails.splice(index, 1);
        }
    }

    // Обробник події для додавання чіпсу при натисканні клавіші Enter у полі вводу
    emailInput.addEventListener('keydown', function(event) {
        if (event.key === 'Enter') {
            event.preventDefault();
            var email = emailInput.value.trim();

            if (email !== '' && !selectedEmails.includes(email)) {
                addChip(email);
            }

            emailInput.value = '';
        }
    });
</script>

