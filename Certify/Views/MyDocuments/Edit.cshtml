@using System.Security.Policy;
@using Data;
@using Certify.Models;
@using Data.Entity;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<User> _userManager
@model Certify.ViewModels.ForMyDocumentsEdit
@{
    ViewData["Title"] = "Edit Document";
}

    <div class="container col-md-6">
        <div class="text-center text-uppercase">
            <h1 class="display-4">@ViewData["Title"]</h1>
        </div>
        <hr/>
        <form asp-action="Edit" asp-controller="MyDocuments" method="post" enctype="multipart/form-data" class="container-fluid row g-3" onsubmit="checkBadgeCount(event)">

            <div class="col-12">
                <label asp-for="Title" class="form-label">Title</label>
                <input asp-for="Title" class="form-control" placeholder="Document title..."  >
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class ="col-12">
                <label asp-for="ShortDescription" class="form-label">Short Description</label>
                <input asp-for="ShortDescription" class="form-control" placeholder="This document is very important because...">
                <span asp-validation-for="ShortDescription" class="text-danger"></span>
            </div>
            <div class="col-12" id="document-id" data-id="@Model.Id">
                <label class="form-label">User Email</label>
                <input id="email-input" class="form-control" placeholder="Enter user emails..." list="email-list"  autocomplete="off"/>
                <datalist id="email-list" class="list-unstyled"></datalist>
                <div id="badges-container" class="mt-2"></div>
                <div id="error-message-not-found" class="text-danger"></div>
                <div id="error-message-empty" class="text-danger"></div>
                <input type="hidden" id="UserEmail" name="UserEmail" value="" />
                <span asp-validation-for="UserEmail" class="text-danger"></span>
            </div>

            <div class="col-6">
                <a asp-action="Info" asp-route-id="@Model.Id" class="btn btn-secondary w-100  mt-md-4">Back</a>
            </div>
            <div class="col-6">
                <button type="submit" class="btn btn-warning w-100 mt-md-4"> Edit</button>
            </div>
    </form>
</div>


@section Scripts {
                <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
                    // Елементи DOM
                    var badgesContainer = document.getElementById('badges-container');
                    var emailInput = document.getElementById('email-input');
                    var errorMessageNotFound = document.getElementById('error-message-not-found');
                    var errorMessageEmpty = document.getElementById('error-message-empty');
                    var modelId = document.getElementById('document-id').dataset.id;
                    var documentId = $("#document-id").data("id");

                    // Змінні
                    var emailList; // Змінна для збереження списку електронних адрес
                    var selectedEmails = []; // Масив для збереження вибраних електронних адрес

                    // Функція для створення нового badge
                    function createBadge(email) {
                        var badgeElement = document.createElement('span');
                        badgeElement.classList.add('badge', 'bg-primary', 'me-1');
                        badgeElement.textContent = email;

                        var iconElement = document.createElement('i');
                        iconElement.classList.add('bi', 'bi-x', 'ms-1');
                        badgeElement.appendChild(iconElement);

                        badgeElement.addEventListener('click', function () {
                            removeBadge(email);
                        });

                        badgesContainer.appendChild(badgeElement);
                        selectedEmails.push(email);
                        updateUserEmails();
                    }

                    // Функція для видалення badge
                    function removeBadge(email) {
                        var badgeElements = badgesContainer.getElementsByClassName('badge');
                        for (var i = 0; i < badgeElements.length; i++) {
                            if (badgeElements[i].textContent === email) {
                                badgeElements[i].parentNode.removeChild(badgeElements[i]);
                                break;
                            }
                        }

                        var index = selectedEmails.indexOf(email);
                        if (index > -1) {
                            selectedEmails.splice(index, 1);
                            updateUserEmails();
                        }
                    }

                    // Функція для оновлення значення UserEmail
                    function updateUserEmails() {
                        var userEmailInput = document.getElementById('UserEmail');
                        userEmailInput.value = JSON.stringify(selectedEmails);
                    }

                    // Функція для завантаження списку електронних адрес
                    function loadEmailList(documentId) {
                        $.ajax({
                            url: '/MyDocuments/GetEmailListEdit',
                            type: 'GET',
                            data: { documentId: documentId },
                            success: function(data) {
                                emailList = data;
                                var dataList = $("#email-list");
                                dataList.empty();
                                emailList.forEach(function(email) {
                                    dataList.append("<option value='" + email + "'>" + email + "</option>");
                                });
                            },
                            error: function(error) {
                                console.error(error);
                            }
                        });
                    }

                    // Обробник події для додавання badge при натисканні клавіші Enter
                    emailInput.addEventListener('keydown', function (event) {
                        if (event.key === 'Enter') {
                            event.preventDefault();
                            var email = emailInput.value.trim();
                            if (email !== '' && !selectedEmails.includes(email)) {
                                checkEmailExists(email);
                            }
                            emailInput.value = '';
                        }
                    });

                    // Функція для перевірки наявності електронної адреси
                    function checkEmailExists(email) {
                        if (emailList && emailList.includes(email)) {
                            createBadge(email);
                            errorMessageNotFound.textContent = '';
                            errorMessageNotFound.style.display = 'none';
                            errorMessageEmpty.textContent = '';
                            errorMessageEmpty.style.display = 'none';
                        } else {
                                errorMessageNotFound.textContent = 'The user with the entered email address has already received the document for signature';
                            errorMessageNotFound.style.display = 'block';
                            errorMessageEmpty.textContent = '';
                            errorMessageEmpty.style.display = 'none';
                        }
                    }



                    // Завантаження списку електронних адрес
                    loadEmailList(documentId);
        </script>
}